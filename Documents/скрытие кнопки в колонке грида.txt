// WidgetAttach
function reconfigure(sender, store, columns, oldStore, oldColumns, eOpts)
{
    // скрытие кнопки Обновить цену
    var widgetColIndx=9;
    columns[widgetColIndx].onWidgetAttach = function(column, widget, record) {
        widget.setHidden(record.get(widgetColIndx) == 0);
    };
}


// actioncolumn
// actioncolumn через класс
function reconfigure(sender, store, columns, oldStore, oldColumns, eOpts)
{
    dataColIndx = 4;   
    actionColIndx = 7;
    actionItemsIndx = 0;
             
    columns[actionColIndx].items[actionItemsIndx].getClass = function (v, metadata, record) {
        if (record.data[dataColIndx] == "") {
            return 'x-hidden'
        } else {
            return '';    //x-uni-action-cls
        }
    };  
}

columns.forEach(function(col){
    if (col.xtype && col.xtype == 'actioncolumn') {
        col.items.forEach(function(actioncol) {
            actioncol.getClass = function(value, metadata, record) {
                return "x-hidden"
            }
        })
    }
 });


function reconfigure(sender, store, columns, oldStore, oldColumns, eOpts)
{
    dataColIndx = 4;   // инвойс
    actionColIndx = 7;
    actionItemsIndx = 0;
    
    columns[actionColIndx].items[actionItemsIndx].isActionDisabled = function (grid, rowIndex, colIndex, items, record) {  
        return (record.data[dataColIndx] == "");
    };
}